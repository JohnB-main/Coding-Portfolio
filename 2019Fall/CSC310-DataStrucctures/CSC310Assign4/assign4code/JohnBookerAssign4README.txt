############################# ASSIGNMENT 4 README #############################
THIS PROGRAM WILL RUN TWO PROBLEMS, ONE IS PREMADE AND THE SECOND IS INPUT BY THE USER.

#1: THE FIRST PROBLEM PRINTS THE INSERTION SORTED PRIORITY QUEUE FROM A PREMADE SET OF KEYS AND VALUES.
	VALUES AND KEYS ARE THE SAME, FROM A POSITION IN THE LIST.
	THIS TESTING IS NOT MANIPULATED BY THE USER, UNLESS THE USER WISHES TO CHANGE THE CODE.
	THE VALUES USED ARE THE SAME VALUES USED IN THE EXAMPLE QUESTION.
	ACCORDING TO THE SLIDES, A SELECTION SORTING QUEUE IS A SORTED PRIORITY QUEUE, WHICH IS WHAT #1 IS.

#2 THE SECOND PROBLEM/PORTION OF THE PROGRAM WILL ASK FOR USER INPUT. THE USER WILL INPUT THE VALUES OF A BINARY TREE.
	THE VALUES MUST BE INTEGERS OR "null", UNLESS THE USER WISHES TO STOP INPUTTING INTEGERS (WHICH THEN THE USER SHOULD INPUT A "n")
	THE USER SHOULD NOT SUBMIT A BLANK BINARY TREE, OR A TREE WITH ONLY ONE ROOT AND NO CHILDREN.

	!IMPORTANT!: THE USER MUST INCLUDE ALL VALUES IN THE BINARY TREE UP TO THE LAST LEVEL, THIS INCLUDES NULL VALUES.
			THE USER MUST ALSO INPUT THE VALUES STARTING AT THE TOP OF THE TREE, THEN DESCENDING DOWN ONE LEVEL INPUTTING THE 
			VALUES FROM LEFT TO RIGHT.
	
	EXAMPLE:

DESIRED TREE
		1
	      /   \
             2     3
	      \   / 
               4 5

USER INPUT SHOULD BE:
1
2
3
null
4
5
null
n

